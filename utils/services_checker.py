import subprocess

services = [
    {
        'name': "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö",
        'filename': "mysql.service"
    },
    {
        'name': "–°–µ—Ä–≤–µ—Ä Nginx",
        'filename': "nginx.service"
    },
    {
        'name': "\nTelegram-–±–æ—Ç",
        'filename': "chemistry_bot.service"
    },
    {
        'name': "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
        'filename': "chemistry_stats.service"
    },
    {
        'name': "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ",
        'filename': "chemistry_control.service"
    }
]

service_status_translation = {
    "active": "‚úÖ —Ä–∞–±–æ—Ç–∞–µ—Ç",
    "inactive": "‚õî –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ",
    "failed": "‚õî –∑–∞–≤–µ—Ä—à–µ–Ω–æ",
    "activating": "üü° –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è",
    "deactivating": "üî¥ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è",
    "reloading": "üîÑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è",
    "unknown": "‚õî –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ"
}


def get_system_status():
    result = []
    for service in services:
        try:
            status = subprocess.run(['systemctl', 'is-active', service['filename']], capture_output=True, text=True)
            service_status = status.stdout.strip()
            result.append(
                {
                    'name': service['name'],
                    'status': service_status_translation[service_status]
                }
            )
        except Exception as e:
            result.append(
                {
                    'name': service['name'],
                    'status': service_status_translation['unknown']
                }
            )
    return result